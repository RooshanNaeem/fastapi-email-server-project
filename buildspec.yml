version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - echo Build completed on `date`

  post_build:
    commands:
      - trivy image --exit-code 0 --severity HIGH,CRITICAL --format json $REPOSITORY_URI:latest > $IMAGE_TAG.json
      - if grep -qE '"Severity": "(HIGH|CRITICAL)"' $IMAGE_TAG.json; then
          aws sns publish --topic-arn $TOPIC_ARN --message "Trivy scan detected critical/high vulnerabilities";
          exit 1;
        else
          aws s3 cp $IMAGE_TAG.json s3://trivy-dev-bucket/$IMAGE_TAG.json;
          S3_OBJECT_URL=$(aws s3 presign s3://trivy-dev-bucket/$IMAGE_TAG.json --expires-in 86400);
          aws sns publish --topic-arn $TOPIC_ARN --message "Trivy scan results:\n${S3_OBJECT_URL}";
        fi
      - echo Pushing the Docker images...
      - echo $REPOSITORY_URI
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definition files....
      - printf '[{"name":"'${CONTAINER_NAME}'","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinition.json

artifacts:
  files:
    - imagedefinition.json
  name: image-definition